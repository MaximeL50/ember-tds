{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","prjt4/tests/app.lint-test.js","prjt4/tests/helpers/destroy-app.js","prjt4/tests/helpers/module-for-acceptance.js","prjt4/tests/helpers/start-app.js","prjt4/tests/test-helper.js","prjt4/tests/tests.lint-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('prjt4/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('adapters/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/developer.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/developer.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/developers.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/developers.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/project.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/project.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/step.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/step.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/storie.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/storie.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/story.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/story.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/tag.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/tag.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/task.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/task.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/developers.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/developers.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/developers/edit.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/developers/edit.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/developers/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/developers/new.js should pass ESLint\\n\\n2:8 - \\'EmberObject\\' is defined but never used. (no-unused-vars)\\n2:21 - \\'get\\' is defined but never used. (no-unused-vars)\\n2:25 - \\'set\\' is defined but never used. (no-unused-vars)\\n13:13 - Unexpected console statement. (no-console)\\n18:61 - Use import EmberObject from \\'@ember/object\\'; instead of using Ember.Object (ember/new-module-imports)\\n18:61 - \\'Ember\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('routes/developers/remove.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/developers/remove.js should pass ESLint\\n\\n2:21 - \\'get\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('routes/project.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/project.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/projects.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/projects.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/projects/edit.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/projects/edit.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/projects/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/projects/new.js should pass ESLint\\n\\n2:21 - \\'get\\' is defined but never used. (no-unused-vars)\\n2:25 - \\'set\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('routes/projects/remove.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/projects/remove.js should pass ESLint\\n\\n2:21 - \\'get\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('serializers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('transforms/utc.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transforms/utc.js should pass ESLint\\n\\n');\n  });\n});","define('prjt4/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  function destroyApp(application) {\n    Ember.run(application, 'destroy');\n  }\n});","define('prjt4/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'prjt4/tests/helpers/start-app', 'prjt4/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Ember.RSVP.resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  };\n});","define('prjt4/tests/helpers/start-app', ['exports', 'prjt4/app', 'prjt4/config/environment'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  function startApp(attrs) {\n    var attributes = Ember.merge({}, _environment.default.APP);\n    attributes.autoboot = true;\n    attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n    return Ember.run(function () {\n      var application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('prjt4/tests/test-helper', ['prjt4/app', 'prjt4/config/environment', '@ember/test-helpers', 'ember-qunit'], function (_app, _environment, _testHelpers, _emberQunit) {\n  'use strict';\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n\n  (0, _emberQunit.start)();\n});","define('prjt4/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n});","require('prjt4/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappingslBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;","file":"tests.js"}